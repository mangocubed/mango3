[package]
name = "mango3-core"
version.workspace = true
edition.workspace = true

[dependencies]
ab_glyph = { version = "0.2.29", optional = true }
argon2 = "0.5.3"
apalis = { workspace = true }
apalis-redis = { workspace = true }
attohttpc = { version = "0.29.2", features = ["charsets",  "json"], optional = true }
cached = { version = "0.55.1", features = ["async", "redis_store", "redis_tokio"] }
chrono = { workspace = true }
dotenvy = "0.15.7"
figment = { version = "0.10.19", features = ["env"] }
fluent-templates = { version = "0.13.0", optional = true }
fluent-bundle = { version = "0.15.3", optional = true }
futures-util = "0.3.31"
futures = { workspace = true }
env_logger = "0.11.7"
handlebars = { version = "6.3.2", features = ["no_logging"], optional = true}
handlebars_misc_helpers = { version = "0.17.0", default-features = false, features = [
    "json", "jsontype", "string"
], optional = true }
image = { version = "0.25.6", optional = true }
imageproc = { version = "0.25.0", optional = true }
ipnetwork = { workspace = true, optional = true }
md-5 = "0.10.6"
mime = "0.3.17"
multer = { version = "3.1.0", optional = true }
pulldown-cmark = { version = "0.13.0", optional = true }
rand = "0.9.0"
regex = { workspace = true }
rust_iso3166 = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
size = { version = "0.5.0", features = ["serde"], optional = true }
sqlx = { version = "0.8.3", features = ["chrono", "postgres", "runtime-tokio", "tls-rustls", "uuid"] }
strum = { version = "0.27.1", features = ["derive"] }
unic-langid = { version = "0.9.5", features = ["serde"] }
url = { workspace = true }
uuid = { workspace = true }

[dev-dependencies]
chrono = { workspace = true }
fake = { version = "4.2.0", features = ["chrono", "url"] }
tokio = { workspace = true }

[features]
default = ["user"]
# Commands
all-blobs-by-ids = ["blob", "get-blob-by-id"]
all-hashtags-by-ids = ["hashtag"]
all-navigation-items-by-website = ["navigation-item"]
all-user-sessions-by-user = ["user", "user-session"]
authenticate-user = ["user"]
clear-post-cache = ["cache", "post"]
clear-user-cache = [
    "cache",
    "get-user-by-id",
    "get-user-by-username",
    "get-user-by-username-or-email",
    "user",
    "user-bio-html",
    "user-bio-preview-html"
]
clear-website-cache = ["cache", "website"]
confirm-user-email = ["user"]
delete-all-user-sessions = ["all-user-sessions-by-user", "delete-user-session"]
delete-blob = ["blob"]
delete-invitation-code = ["invitation-code"]
delete-orphaned-blobs = ["blob", "delete-blob"]
delete-post-reaction = []
delete-user-session = ["cache", "get-user-session-by-id", "user-session"]
disable-user = ["clear-user-cache", "delete-all-user-sessions"]
get-blob-by-id = ["blob", "cache"]
get-hashtag-by-id = ["hashtag"]
get-hashtag-by-name = ["hashtag"]
get-invitation-code = ["invitation-code"]
get-invitation-code-by-id = ["invitation-code"]
get-navigation-item-by-id = ["navigation-item"]
get-or-insert-hashtag = ["hashtag"]
get-or-insert-many-hashtags = ["get-or-insert-hashtag"]
get-or-insert-post-view = []
get-post-by-id = ["cache", "post"]
get-post-by-id-with-search-rank = ["post"]
get-post-by-slug = ["cache", "post"]
get-post-comments-count = []
get-post-reaction-by-post-and-user = ["post", "post-reaction", "user"]
get-post-reaction-emojis-count = []
get-post-reactions-count = []
get-post-views-count = []
get-user-by-id = ["cache", "user"]
get-user-by-username =["cache", "user"]
get-user-by-username-or-email = ["cache", "user"]
get-user-session-by-id = ["cache", "user-session"]
get-website-by-id = ["cache", "website"]
get-website-by-id-with-search-rank = ["website"]
get-website-by-subdomain = ["cache", "website"]
insert-blob = ["blob"]
insert-invitation-code = ["invitation-code", "jobs", "mutation"]
insert-or-update-many-navigation-items = ["navigation-item"]
insert-or-update-post-reaction = []
insert-post = ["post"]
insert-user = ["jobs", "user"]
insert-website = ["website"]
paginate-blobs = ["blob", "pagination"]
paginate-posts = ["get-post-by-id", "hashtag", "pagination", "post"]
paginate-websites = ["hashtag", "website"]
reset-user-password = ["user"]
search-posts = ["hashtag", "post"]
search-websites = ["hashtag", "website"]
send-user-email-confirmation-code = ["confirmation-code", "user"]
send-user-login-confirmation-code = ["confirmation-code", "user"]
send-user-password-reset-code = ["confirmation-code", "user"]
update-post = ["post"]
update-user-email = ["user"]
update-user-password = ["user"]
update-user-role = ["clear-user-cache"]
update-website = ["website"]
# Models
blob = ["user", "website"]
confirmation-code = []
hashtag = []
invitation-code = []
navigation-item = []
post = [
    "all-blobs-by-ids",
    "all-hashtags-by-ids",
    "get-blob-by-id",
    "get-post-comments-count",
    "get-post-reactions-count",
    "get-post-views-count",
    "get-user-by-id",
    "get-website-by-id",
    "markdown",
]
post-comment = []
post-reaction = []
user = ["all-hashtags-by-ids", "get-blob-by-id"]
user-session = ["user"]
website = ["all-hashtags-by-ids", "get-blob-by-id", "markdown"]
# Model attributes
blob-is-removable = ["blob"]
blob-read = ["blob", "dep:image"]
post-content-html = ["handlebars", "markdown", "post"]
user-bio-html = ["markdown", "user"]
user-bio-preview-html = ["markdown", "user"]
user-i18n = ["locales", "user"]
user-email-is-confirmed = ["user"]
website-description-html = ["markdown", "website"]
website-storage = []
# Utils
cache = []
handlebars = ["dep:attohttpc", "dep:handlebars", "dep:handlebars_misc_helpers"]
jobs = []
locales = ["dep:fluent-templates", "dep:fluent-bundle"]
markdown = ["dep:pulldown-cmark"]
mutation = []
pagination  = []
text-icon = ["dep:ab_glyph", "dep:image", "dep:imageproc"]
validator = ["locales"]
